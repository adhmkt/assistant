/* Base styles */
body {
    font-family: 'Your Font', sans-serif;
    color: #333; /* Replace with the exact color from the design */
    background-color: #f5f5f5; /* Replace with the exact background color */
  }
  
  /* Navigation styles */
  header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 2rem;
  }
  
  
  .hero {
  /* background-image: url('path-to-hero-background.jpg');  */
  background-size: cover;
  text-align: center;
  padding: 4rem 1rem;
  }
  
  /* Services section styles */
  .services {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 2rem;
  padding: 2rem;
  }
  
  /* Education section styles */
  .education {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 2rem;
  padding: 2rem;
  }
  
 
  section > div {
  background: #fff; 
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  padding: 1rem;
  border-radius: 8px;
  }
  
 
  button {
  background-color: #007bff; 
  color: #fff;
  border: none;
  padding: 0.75rem 1.5rem;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.3s;
  }
  
  button:hover {
  background-color: #0056b3; 
  }
  
  
  footer {
  background-color: #333; 
  color: #fff;
  padding: 2rem;
  text-align: center;
  }

  div.header-container {
    display: flex; /* Establishes a flex container */
    justify-content: space-between; /* Distributes space between the child elements */
    align-items: center; /* Aligns items vertically in the center */
    padding: 0 20px; /* Adds some padding on the left and right */
  }
  
  /* You may also want to ensure that each child division has appropriate spacing */
  div.header-container > div {
    margin-right: 10px; /* Adds spacing between child divs, adjust as needed */
  }
  
  /* Optional: to make sure the logo image doesn't stretch */
  div.header-container .logo img {
    height: auto; /* Maintain aspect ratio */
    max-height: 50px; /* Maximum height of logo */
    width: auto; /* Adjust width automatically */
  }
  
  /* This is to reset the margin for the last element, if you desire */
  div.header-container > div:last-child {
    margin-right: 0;
  }
  
  /* Responsive adjustments can also be made using media queries if necessary */
  @media (max-width: 768px) {
    .header-container {
      flex-direction: column;
      align-items: flex-start
  ; /* Stack the items vertically on smaller screens */
  }
  
  .header-container > div {
  margin-right: 0; /* Reset margin-right as it is no longer needed /
  margin-bottom: 10px; / Adds spacing between stacked child divs */
  }
  
  .header-container > div:last-child {
  margin-bottom: 0; /* Reset margin-bottom for the last element */
  }
  }